---
openapi: 3.0.0
info:
  description: This API provides audit info
  version: 1.0.0
  title: Audit API
  contact:
    email: abalcerak@my.bcit.ca
paths:
  /reports/patrols:
    get:
      summary: gets a patrol report reading from history
      operationId: app.get_patrol_report
      description: Gets patrol report from the event store
      parameters:
        - name: index
          in: query
          description: Gets the PR at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: Successfully returned a Patrol Report event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/PatrolReport"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /reports/infrared:
    get:
      summary: gets a infrared report reading from history
      operationId: app.get_infrared_report
      parameters:
        - name: index
          in: query
          description: Gets the HR at the index in the event store
          schema:
            type: integer
            example: 100
      responses:
        "200":
          description: Successfully returned a Infrared Report event
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/InfraredReport"
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Not Found
components:
  schemas:
    PatrolReport:
      required:
      - officer_id
      - reporter
      - status_code
      - timestamp
      - writeup
      type: object
      properties:
        officer_id:
          type: string
          example: "132412"
        reporter:
          type: string
          example: Johnny Patrolman
        timestamp:
          format: date-time
          example: 2013-08-15T13:15:53.002Z
        status_code:
          type: integer
          example: 0
        writeup:
          type: string
          example: All clear.
    InfraredReport:
      required:
      - sensor_id
      - status_code
      - temperature
      - timestamp
      type: object
      properties:
        sensor_id:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        timestamp:
          type: string
          format: date-time
          example: 2013-08-16T02:11:43.001Z
        temperature:
          type: integer
          example: 14
        status_code:
          type: integer
          example: 0

