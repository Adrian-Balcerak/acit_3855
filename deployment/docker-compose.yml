version: '3.8'

services:
  receiver:
    build:
      context: ./../receiver
      dockerfile: dockerfile
    ports:
      - "8080:8080"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - kafka

  storage:
    build:
      context: ./../storage
      dockerfile: dockerfile
    ports:
      - "8090:8090"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - kafka
      - db

  process:
    build:
      context: ./../processor
      dockerfile: dockerfile
    ports:
      - "8100:8100"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - storage

  audit:
    build:
      context: ./../audit
      dockerfile: dockerfile
    ports:
      - "8110:8110"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - kafka

  dashboard-ui:
    build:
      context: ./../dashboard-ui
      dockerfile: dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    depends_on:
      - process
      - audit

  zookeeper:
    image: wurstmeister/zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - "/home/<username>/zookeeper/data:/opt/zookeeper-3.4.13/data"


  kafka:
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CREATE_TOPICS: "events:1:1"  # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: 20.200.126.250  # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://20.200.126.250:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/azureuser/kafka:/kafka/kafka-logs
    depends_on:
      - "zookeeper"

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'events'
      MYSQL_USER: 'username'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: '1234'
    ports:
      - '3306:3306'  # <Port exposed> : < MySQL Port running inside container>
    expose:
      - '3306'  # Opens port 3306 on the container
    volumes:
      - my-db:/var/lib/mysql  # Where our data will be persisted


volumes:
  my-db:

networks:
  app-network:
    driver: bridge